{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "udprojectfactory"
		},
		"lsdatalakestorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lsdatalakestorage'"
		},
		"lssqldb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lssqldb'"
		},
		"lssynapse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lssynapse'"
		},
		"lsdatalakestorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://udprojectlake22.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/agencyfromlaketosynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "agencyfromlaketosynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "agencyfromlaketosynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"agencylakesource": {},
									"agencydestinationsynapse": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsdatalakestorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollraymonda/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T19:25:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/agencyfromlaketosynapse')]",
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empdatafromlaketosynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "empdatafromlaketosynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "empdatafromlaketosynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"lakeempdata": {},
									"synapseempdate": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsdatalakestorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollraymonda/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T19:22:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/empdatafromlaketosynapse')]",
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lakepayroll2021tosqlpayroll2021')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "pipeline to load 2021 Payroll Data to SQL DB transaction table (in the future NYC will load all the transaction data into this table)",
				"activities": [
					{
						"name": "lakepayroll2021tosqlpayroll2021",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "lakepayroll2021tosqlpayroll2021",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"lake2021payroll": {},
									"sqlpayroll2021destination": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T18:35:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/lakepayroll2021tosqlpayroll2021')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/masterpipelinetosynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "empdatafromlaketosynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "empdatafromlaketosynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"lakeempdata": {},
									"synapseempdate": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsdatalakestorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollraymonda/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "titlefromlaketosynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "titlefromlaketosynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"laketitledata": {},
									"synapsetitledestination": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsdatalakestorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollraymonda/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "agencyfromlaketosynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "agencyfromlaketosynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"agencylakesource": {},
									"agencydestinationsynapse": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsdatalakestorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollraymonda/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "payrolldatafromsqltosynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "titlefromlaketosynapse",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "agencyfromlaketosynapse",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "empdatafromlaketosynapse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "payrolldatafromsqltosynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sqltransactiondbsource": {},
									"synapsedestinationpayrolldata": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsdatalakestorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollraymonda/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T19:44:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/empdatafromlaketosynapse')]",
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]",
				"[concat(variables('factoryId'), '/dataflows/titlefromlaketosynapse')]",
				"[concat(variables('factoryId'), '/dataflows/agencyfromlaketosynapse')]",
				"[concat(variables('factoryId'), '/dataflows/payrolldatafromsqltosynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/payrolldatafromsqltosynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "payrolldatafromsqltosynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "payrolldatafromsqltosynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sqltransactiondbsource": {},
									"synapsedestinationpayrolldata": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsdatalakestorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollraymonda/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T19:28:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/payrolldatafromsqltosynapse')]",
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline Aggregate Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataflow Aggregate Data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow Aggregate Data",
								"type": "DataFlowReference",
								"parameters": {
									"dataflow_param_fiscalyear": {
										"value": "@pipeline().parameters.pipeline_param",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"adfsqltransactiondb": {},
									"lakepayrollhistory": {},
									"destinationsynapsesummarytable": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsdatalakestorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollraymonda/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pipeline_param": {
						"type": "int",
						"defaultValue": 2021
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T21:12:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dataflow Aggregate Data')]",
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/titlefromlaketosynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "titlefromlaketosynapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "titlefromlaketosynapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"laketitledata": {},
									"synapsetitledestination": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "lsdatalakestorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollraymonda/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T19:23:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/titlefromlaketosynapse')]",
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdestination_agencymd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lssynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_AGENCY_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lssynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdestination_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lssynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PayrollNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "date"
					},
					{
						"name": "WorkLocationBorough",
						"type": "varchar"
					},
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "varchar"
					},
					{
						"name": "BaseSalary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PayBasis",
						"type": "varchar"
					},
					{
						"name": "RegularHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RegularGrossPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OTHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOTPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOtherPay",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lssynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdestination_empmd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lssynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_EMP_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lssynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdestination_titlemd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lssynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_TITLE_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lssynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adflake2021payroll')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsdatalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "nycpayroll_2021.csv",
						"folderPath": "dirpayrollfiles",
						"fileSystem": "adlsnycpayrollraymonda"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "PayrollNumber",
						"type": "String"
					},
					{
						"name": "AgencyCode",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					},
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AgencyStartDate",
						"type": "String"
					},
					{
						"name": "WorkLocationBorough",
						"type": "String"
					},
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "String"
					},
					{
						"name": "BaseSalary",
						"type": "String"
					},
					{
						"name": "PayBasis",
						"type": "String"
					},
					{
						"name": "RegularHours",
						"type": "String"
					},
					{
						"name": "RegularGrossPaid",
						"type": "String"
					},
					{
						"name": "OTHours",
						"type": "String"
					},
					{
						"name": "TotalOTPaid",
						"type": "String"
					},
					{
						"name": "TotalOtherPay",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adflakeagencymaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsdatalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "AgencyMaster.csv",
						"folderPath": "dirpayrollfiles",
						"fileSystem": "adlsnycpayrollraymonda"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AgencyID",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adflakeempmaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsdatalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "EmpMaster.csv",
						"folderPath": "dirpayrollfiles",
						"fileSystem": "adlsnycpayrollraymonda"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adflaketitlemaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsdatalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "TitleMaster.csv",
						"folderPath": "dirpayrollfiles",
						"fileSystem": "adlsnycpayrollraymonda"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfsqltransactiondb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lssqldb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PayrollNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "date"
					},
					{
						"name": "WorkLocationBorough",
						"type": "varchar"
					},
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "varchar"
					},
					{
						"name": "BaseSalary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PayBasis",
						"type": "varchar"
					},
					{
						"name": "RegularHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RegularGrossPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OTHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOTPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOtherPay",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lssqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lakepayrollhistory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsdatalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "nycpayroll_2020.csv",
						"folderPath": "dirhistoryfiles",
						"fileSystem": "adlsnycpayrollraymonda"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "PayrollNumber",
						"type": "String"
					},
					{
						"name": "AgencyID",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					},
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AgencyStartDate",
						"type": "String"
					},
					{
						"name": "WorkLocationBorough",
						"type": "String"
					},
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "String"
					},
					{
						"name": "BaseSalary",
						"type": "String"
					},
					{
						"name": "PayBasis",
						"type": "String"
					},
					{
						"name": "RegularHours",
						"type": "String"
					},
					{
						"name": "RegularGrossPaid",
						"type": "String"
					},
					{
						"name": "OTHours",
						"type": "String"
					},
					{
						"name": "TotalOTPaid",
						"type": "String"
					},
					{
						"name": "TotalOtherPay",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsdatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapse_nyc_payroll_summary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lssynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "TotalPaid",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Summary"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lssynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsdatalakestorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lsdatalakestorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lsdatalakestorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lssqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('lssqldb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lssynapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('lssynapse_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow Aggregate Data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adfsqltransactiondb",
								"type": "DatasetReference"
							},
							"name": "adfsqltransactiondb"
						},
						{
							"dataset": {
								"referenceName": "lakepayrollhistory",
								"type": "DatasetReference"
							},
							"name": "lakepayrollhistory"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapse_nyc_payroll_summary",
								"type": "DatasetReference"
							},
							"name": "destinationsynapsesummarytable"
						}
					],
					"transformations": [
						{
							"name": "unionactivity"
						},
						{
							"name": "filteractivity"
						},
						{
							"name": "derivedColumnactivity"
						},
						{
							"name": "aggregateactivity"
						}
					],
					"scriptLines": [
						"parameters{",
						"     dataflow_param_fiscalyear as integer (2021)",
						"}",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> adfsqltransactiondb",
						"source(output(",
						"          FiscalYear as short,",
						"          PayrollNumber as short,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> lakepayrollhistory",
						"adfsqltransactiondb, lakepayrollhistory union(byName: true)~> unionactivity",
						"unionactivity filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> filteractivity",
						"filteractivity derive(TotalPaid = RegularGrossPaid + TotalOTPaid+TotalOtherPay) ~> derivedColumnactivity",
						"derivedColumnactivity aggregate(groupBy(AgencyName,",
						"          FiscalYear),",
						"     TotalPaid = sum(TotalPaid)) ~> aggregateactivity",
						"aggregateactivity sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          AgencyName as string,",
						"          TotalPaid as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          AgencyName,",
						"          TotalPaid",
						"     )) ~> destinationsynapsesummarytable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adfsqltransactiondb')]",
				"[concat(variables('factoryId'), '/datasets/lakepayrollhistory')]",
				"[concat(variables('factoryId'), '/datasets/synapse_nyc_payroll_summary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/agencyfromlaketosynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adflakeagencymaster",
								"type": "DatasetReference"
							},
							"name": "agencylakesource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adfdestination_agencymd",
								"type": "DatasetReference"
							},
							"name": "agencydestinationsynapse"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          AgencyID as short,",
						"          AgencyName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> agencylakesource",
						"agencylakesource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          AgencyID as string,",
						"          AgencyName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          AgencyID,",
						"          AgencyName",
						"     )) ~> agencydestinationsynapse"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adflakeagencymaster')]",
				"[concat(variables('factoryId'), '/datasets/adfdestination_agencymd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empdatafromlaketosynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adflakeempmaster",
								"type": "DatasetReference"
							},
							"name": "lakeempdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adfdestination_empmd",
								"type": "DatasetReference"
							},
							"name": "synapseempdate"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          EmployeeID as integer,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> lakeempdata",
						"lakeempdata sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName",
						"     )) ~> synapseempdate"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adflakeempmaster')]",
				"[concat(variables('factoryId'), '/datasets/adfdestination_empmd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lakepayroll2021tosqlpayroll2021')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adflake2021payroll",
								"type": "DatasetReference"
							},
							"name": "lake2021payroll"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adfsqltransactiondb",
								"type": "DatasetReference"
							},
							"name": "sqlpayroll2021destination"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as short,",
						"          PayrollNumber as short,",
						"          AgencyCode as short,",
						"          AgencyName as string,",
						"          EmployeeID as integer,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as integer,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as short,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> lake2021payroll",
						"lake2021payroll sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          PayrollNumber,",
						"          AgencyName,",
						"          LastName,",
						"          FirstName,",
						"          AgencyStartDate,",
						"          WorkLocationBorough,",
						"          TitleDescription,",
						"          LeaveStatusasofJune30,",
						"          BaseSalary,",
						"          PayBasis,",
						"          RegularHours,",
						"          RegularGrossPaid,",
						"          OTHours,",
						"          TotalOTPaid,",
						"          TotalOtherPay,",
						"          AgencyID = AgencyCode,",
						"          EmployeeID,",
						"          TitleCode",
						"     )) ~> sqlpayroll2021destination"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adflake2021payroll')]",
				"[concat(variables('factoryId'), '/datasets/adfsqltransactiondb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/payrolldatafromsqltosynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adfsqltransactiondb",
								"type": "DatasetReference"
							},
							"name": "sqltransactiondbsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adfdestination_data",
								"type": "DatasetReference"
							},
							"name": "synapsedestinationpayrolldata"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sqltransactiondbsource",
						"sqltransactiondbsource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          PayrollNumber,",
						"          AgencyID,",
						"          AgencyName,",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName,",
						"          AgencyStartDate,",
						"          WorkLocationBorough,",
						"          TitleCode,",
						"          TitleDescription,",
						"          LeaveStatusasofJune30,",
						"          BaseSalary,",
						"          PayBasis,",
						"          RegularHours,",
						"          RegularGrossPaid,",
						"          OTHours,",
						"          TotalOTPaid,",
						"          TotalOtherPay",
						"     )) ~> synapsedestinationpayrolldata"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adfsqltransactiondb')]",
				"[concat(variables('factoryId'), '/datasets/adfdestination_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/titlefromlaketosynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adflaketitlemaster",
								"type": "DatasetReference"
							},
							"name": "laketitledata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adfdestination_titlemd",
								"type": "DatasetReference"
							},
							"name": "synapsetitledestination"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          TitleCode as integer,",
						"          TitleDescription as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> laketitledata",
						"laketitledata sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          TitleCode,",
						"          TitleDescription",
						"     )) ~> synapsetitledestination"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adflaketitlemaster')]",
				"[concat(variables('factoryId'), '/datasets/adfdestination_titlemd')]"
			]
		}
	]
}